#  This file is part of the Traffic Assignment Package developed at KU Leuven.
#  Copyright (c) 2020 Paul Ortmann
#  License: GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007, see license.txt
#  More information at: https://gitlab.mech.kuleuven.be/ITSCreaLab
#  or contact: ITScrealab@kuleuven.be
#
#
from private import key
import googlemaps
from googlemaps.distance_matrix import distance_matrix
import pyproj
import numpy as np



# x and y coordinates of all zone centroids in the Leuven network
x = [173416.624537, 173652.842475, 173126.000000, 173058.287657, 173604.000000, 173960.000000, 173872.000000,
     174246.698838, 174069.820093, 173626.000000, 173134.729178, 172650.599550, 172513.000000, 172646.000000,
     172950.000000, 173456.000000, 174275.000000, 174491.593750, 174627.495060, 174501.906250, 174265.005948,
     173763.806843, 172302.613747, 171744.000000, 171405.000000, 171878.000000, 172552.000000, 173264.021613,
     173747.000000, 173970.000000, 174246.296880, 174940.000000, 174789.000000, 175318.000000, 174983.000000,
     175320.000000, 174675.000000, 173803.351110, 173039.000000, 171791.712675, 171424.052747, 171175.162432,
     170873.000000, 171700.000000, 172519.000000, 173088.000000, 173619.000000, 174735.183482, 175700.000000,
     176120.000000, 175904.296880, 176139.000000, 176140.000000, 175340.000000, 174260.000000, 172923.000000,
     172223.000000, 171263.940886, 170558.774944, 169679.000000, 170867.000000, 173167.653551, 174004.564769,
     175490.000000, 176630.000000, 176462.000000, 177455.000000, 177060.000000, 177471.410512, 177361.000000,
     175600.703859, 174668.343966, 170555.316505, 170175.630670, 169577.000000, 169731.000000, 170148.000000,
     171337.000000, 171967.000000, 173424.358076, 174128.000000, 174571.289385, 175282.137125, 177850.000000,
     177836.110558, 178392.000000, 177697.753221, 177490.049339, 176691.977331, 174903.000000, 168694.000000,
     168702.000000, 168042.000000, 167828.000000, 167836.203130, 170692.000000, 172396.000000, 173314.796880,
     173155.000000, 174189.408256, 175762.632919, 177718.399380, 177859.084657, 179094.296880, 179123.000000,
     178872.000000, 175685.500000, 170494.000000, 169140.898576, 167191.000000, 165435.969809, 168613.000000,
     167892.000000, 169989.000000, 172725.000000, 173922.432966, 175793.577047, 176549.397739, 177168.000000,
     178677.330741, 180544.404163, 180497.000000, 179780.000000, 179490.000000, 181030.000000, 177352.418740,
     173922.000000, 172574.000000, 170079.629692, 165622.162387, 163515.138980, 163708.891448, 162877.371740,
     163747.801234, 164673.580826, 166596.393655, 169095.000000, 171848.744839, 173365.399564, 176323.938377,
     177844.375763, 180952.861079, 182273.197196, 182722.709085, 184448.058432, 184788.414739, 184527.594110,
     183283.128679, 179776.932640, 173715.463999, 169988.486382, 167487.062343, 164378.822843, 163676.413320]
y = [174297.179471, 173830.516647, 174070.000000, 174896.415971, 174807.000000, 174480.000000, 174199.000000,
     174120.389610, 173550.984434, 173368.000000, 173403.986292, 173902.676209, 174469.000000, 174776.000000,
     175210.000000, 175341.000000, 174878.000000, 174485.000000, 173803.717993, 173453.796880, 173147.942236,
     172921.933876, 173582.669442, 174031.000000, 174196.000000, 175045.000000, 175393.000000, 175946.761455,
     175707.000000, 175970.000000, 176209.296880, 175460.000000, 174944.000000, 174729.000000, 173992.000000,
     173540.000000, 173168.000000, 172437.516608, 172645.000000, 172589.508787, 173115.217266, 173222.984206,
     174944.000000, 176320.000000, 176524.000000, 176780.000000, 176473.000000, 176626.758730, 175539.000000,
     174670.000000, 173990.796880, 173361.000000, 172540.000000, 172430.000000, 172043.000000, 171466.000000,
     171544.000000, 172634.562476, 173330.903868, 174974.000000, 176258.000000, 177178.591281, 177541.708764,
     176780.000000, 176420.000000, 175339.796880, 175130.000000, 174474.000000, 172773.446992, 172485.000000,
     171198.447346, 171075.249886, 172212.216095, 172127.741517, 176098.000000, 177162.000000, 178150.000000,
     177561.000000, 177646.000000, 178634.754382, 177914.000000, 177947.953278, 177609.032549, 177240.000000,
     176362.128136, 175837.000000, 174275.034339, 173335.274496, 171313.075697, 170708.000000, 171690.000000,
     172745.000000, 174111.000000, 175925.000000, 176636.203130, 179062.000000, 179223.000000, 179118.406250,
     179578.000000, 179083.344568, 180291.451978, 179045.055368, 178184.916118, 177442.500000, 175106.000000,
     171532.000000, 169553.406250, 169448.000000, 169839.416670, 171587.000000, 174727.042614, 179589.000000,
     180112.796880, 181307.000000, 180625.000000, 181753.972803, 181939.748473, 181293.446863, 181803.000000,
     181662.722363, 179669.401795, 177209.000000, 173321.000000, 169901.000000, 167880.000000, 169121.769993,
     168217.000000, 168042.000000, 168518.800756, 170922.104253, 173034.483690, 174301.326748, 175384.582826,
     176896.463390, 177098.734561, 181997.606839, 182585.000000, 182232.212875, 183050.323415, 182555.655816,
     182693.744789, 182837.613357, 181922.072964, 179844.444155, 176877.596281, 174710.442536, 169456.769852,
     167966.096270, 165991.581486, 166407.585695, 166887.435237, 166932.840975, 169826.046013, 170595.809875]

in_proj, out_proj = pyproj.Proj('epsg:31370'), pyproj.Proj('epsg:4326')
zone_xs, zone_ys = pyproj.transform(in_proj, out_proj, x, y)
my_client= googlemaps.Client(key=key)

def build_requests(origin_zone,zone_xs: list,zones_ys: list,client):
    origin_rq = f'{zone_xs[origin_zone], zone_ys[origin_zone]}'
    zone_xs.__delitem__(origin_zone)
    zones_ys.__delitem__(origin_zone)
    origin=()
    destination_batches=[]
    batch_count=0
    nr_of_zones=len(zone_xs)
    last_batch=False
    while not last_batch:
        last_rq_ele=25*batch_count+25
        if last_rq_ele> nr_of_zones:
            # last batch ..
            last_rq_ele=nr_of_zones
            last_batch=True
        tmp_x=zone_xs[25*batch_count:last_rq_ele]
        tmp_y = zone_ys[25 * batch_count:last_rq_ele]
        destination_batches.append('|'.join([f'{x},{y}' for x,y in zip(tmp_x, tmp_y)]))
        batch_count+=1
def clean_response(response):
    pass





    # Google Distance API Usage Limits
    #
    # While you are no longer limited to a maximum number of elements per day (EPD), the following usage limits are still in place for the Distance Matrix API:
    #
    #     Maximum of 25 origins or 25 destinations per request.
    #     Maximum 100 elements per server-side request.
    #     Maximum 100 elements per client-side request.
    #     1000 elements per second (EPS), calculated as the sum of client-side and server-side queries.




